{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cat","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,0BAAMC,SARW,SAACC,GAElBA,EAAEC,iBACFN,GAAc,SAAAO,GAAG,OAAGL,GAAH,mBAAiBK,OAClCJ,EAAc,MAKV,2BACIK,KAAK,OACLC,MAAOP,EACPQ,SAfc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,YCLlBG,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IACzB,OACI,yBAAKC,UAAU,0CACZ,yBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC3B,2BAAIL,EAAIK,S,uBCNPC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbL,EAFa,0DAE2CM,UAAUF,GAFrD,sDAIAG,MAAOP,GAJP,cAIbQ,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAf,GAClB,MAAO,CACHgB,GAAGhB,EAAIgB,GACPX,MAAOL,EAAIK,MACXF,IAAKH,EAAIiB,OAAOC,iBAAiBf,QAVtB,kBAaZW,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEXnB,mBAAS,CAC/ByB,KAAK,GACLO,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAZAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAKY,EACLL,SAAQ,SAIzB,CAACb,IAGGc,EDhBuBK,CAAanB,GAA/BU,EAFuB,EAE5BJ,KAAYO,EAFgB,EAEhBA,QAGnB,OACI,oCACA,4BAAKb,GACJa,GAAW,cACZ,yBAAKnB,UAAU,aAEHgB,EAAOF,KAAI,SAAAf,GAAG,OACX,kBAAC,EAAD,CACA2B,IAAK3B,EAAIgB,GACThB,IAAKA,UESb4B,EAvBM,WAAM,IAAD,EAEcxC,mBAAS,CAAC,WAFxB,mBAEfyC,EAFe,KAEH1C,EAFG,KAItB,OACA,oCACA,4CAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BAEQ0C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CAASoB,IAAKpB,EACbA,SAAUA,UCZ3BuB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6a2f1f25.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        setCategories(cat=>[inputValue,...cat]);\r\n        setInputValue('');\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={img.url} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) =>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=LxFL9mDPwADNHrVljavwIQRUjCq2P5HH`;\r\n\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n   \r\n   \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && 'Cargando...'}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img=>(\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       img={img}\r\n                       />\r\n                    ))\r\n                }\r\n   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/GetGifs\"\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n\r\n            })  \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return (\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    {/* <button onClick={handleAdd}>Agregar</button> */}\r\n    <AddCategory setCategories = {setCategories}/>\r\n    <hr></hr>\r\n    <ol>\r\n        {\r\n            categories.map(category=> (\r\n                <GifGrid key={category}\r\n                 category={category}\r\n                />\r\n            ))\r\n        }\r\n    </ol>\r\n    </>\r\n    ) \r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}